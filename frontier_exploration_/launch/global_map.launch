<?xml version="1.0"?>
<launch>
	<!-- Turtlebot simulator with navigation -->
	<include file="$(find ase_exploration)/launch/turtlebot_simulator.launch">
		<arg name="map_file" value="$(find ase_exploration)/maps/map.yaml"/>
		<arg name="world_file" value="$(find ase_exploration)/maps/stage/mit.world"/>
	</include>

	<!-- SLAM for global map and map->base_link tf -->
	<node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
		<param name="xmin" value="-1.0"/>
		<param name="xmax" value="1.0"/>
		<param name="ymin" value="-1.0"/>
		<param name="ymax" value="1.0"/>
	</node>
    <!-- Set to your sensor's range -->
    <arg name="sensor_range" default="5.0"/>

    <node pkg="frontier_exploration" type="explore_client" name="explore_client" output="screen"/>

    <node pkg="frontier_exploration" type="explore_server" name="explore_server" output="screen" >

        <param name="frequency" type="double" value="2.0"/>
        <param name="goal_aliasing" type="double" value="2.0"/>

        #All standard costmap_2d parameters as in move_base, other than BoundedExploreLayer
        <rosparam ns="explore_costmap" subst_value="true">
            footprint: [[0.1, 0.0], [0.0, 0.1], [-0.1, 0.0], [0.0, -0.1]]
            robot_radius: 0.10

            transform_tolerance: 0.5
            update_frequency: 5.0
            publish_frequency: 5.0

            #must match incoming static map
            global_frame: map
            robot_base_frame: base_link
            resolution: 0.05

            rolling_window: false
            track_unknown_space: true

            plugins:

                - {name: static,           type: "costmap_2d::StaticLayer"}
                - {name: explore_boundary, type: "frontier_exploration::BoundedExploreLayer"}
                #Can disable sensor layer if gmapping is fast enough to update scans
                - {name: sensor,           type: "costmap_2d::ObstacleLayer"}
                - {name: inflation,        type: "costmap_2d::InflationLayer"}

            static:
                #Can pull data from gmapping, map_server or a non-rolling costmap
                map_topic: /map
                # map_topic: move_base/global_costmap/costmap
                subscribe_to_updates: true

            explore_boundary:
                resize_to_boundary: false
                frontier_travel_point: centroid
                #set to false for gmapping, true if re-exploring a known area
                explore_clear_space: false

            sensor:
                observation_sources: laser
                laser: {data_type: LaserScan, clearing: true, marking: true, topic: scan, inf_is_valid: true, raytrace_range: $(arg sensor_range), obstacle_range: $(arg sensor_range)}

            inflation:
                inflation_radius: 0.15
      </rosparam>
    </node>
	<!--  **************** Visualisation ****************  -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find ase_exploration)/rviz/simulator_exploration.rviz"/>
</launch>
